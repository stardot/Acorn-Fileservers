 OPT UADE05 ; > <FileServerSource>.Uade05
 TTL File server file UADE05

;*********************************
;*         G L O R T N           *
;*     AND  DOS  CONVERSION      *
;*********************************

;***** R N D M A N  R O U T I N E S *****

;FNDHND: SEARCHES THE HANDLE TABLE (HANDTB)
;FOR A SPECIFIED HANDLE.

;ENTRY: A = HANDLE
;MCNUMB = MACHINE NUMBER

;EXIT : A = RC
;HNDPTR - LEFT POINTING TO PARTICULAR ENTRY
;CONTAINING SPECIFIED (HANDLE,MC/NO).
;NOTE A,X,Y,RNDTMP ARE DESTROYED.

FNDHND ROUT
 STA RNDTMP ;RNDTMP := HANDLE
 TAY
 BEQ #40 ;INVALID HANDLE
 JSR INITHD ;HNDPTR:=HANDTB;X:=HTENTS

;FIRST SEE IF MACHINE NUMBER MATCHES

20 LDYIM HTMCNO ;LSIG BYTE FIRST
 LDAIY HNDPTR
 CMP MCNUMB
 BNE #30
 INY
 LDAIY HNDPTR
 CMP MCNUMB+1
 BNE #30
 INY
 LDAIY HNDPTR
 CMP MCNUMB+2
 BNE #30

;NOW SEE IF HANDLE MATCHES

 LDYIM HTHAND
 LDA RNDTMP
 CMPIY HNDPTR
 BNE #30

;FOUND

 LDAIM 0 ;RC := 0
 RTS

30 JSR INCHND ;MOVE HNDPTR TO NEXT ENTRY,DEX
 BNE #20
40 LDAIM RDERRB
 RTS


INITHD LDA HANDTB ;HNDPTR := HANDTB
 STA HNDPTR
 LDA HANDTB+1
 STA HNDPTR+1
 LDX HTENTS ;X := HTENTS
 RTS


INCHND ROUT
 CLC  ;HNDPTR +:= HTENSZ
 LDA HNDPTR
 ADCIM HTENSZ
 STA HNDPTR
 BCC #10
 INC HNDPTR+1
10 DEX  ;X -:= 1
 RTS


;USRMAN ROUTINES

;FINDMC: FIND A USERTB ENTRY - SEARCH
;USERTB FOR AN ENTRY CONTAINING A
;GIVEN MACHINE NUMBER.
;NOTE THAT FINDMC MAY BE CALLED
;BY ANY MODULE.
;(THIS FUNCTION WILL PROBABLY
;NEED SPEEDING UP - POSSIBLY USING
;A HASH TABLE FOR USERTB)

;ENTRY: THE VARIABLE, MCNUMB,
;SHOULD CONTAIN THE
;NUMBER OF THE MACHINE
;TO BE LOOKED UP IN USERTB.

;EXIT:  A = RC
;IF A = 0
;THEN USTPTR (PAGE ZERO) IS
;LEFT POINTING TO THE USERTB ENTRY
;FI


FINDMC ROUT
 JSR INITUS ;USTPTR:=USERTB,X:=UTENTS
10 LDA MCNUMB ;LS(MC/NO)
 LDYIM UTMCNO
 CMPIY USTPTR
 BNE #20
 INY
 LDA MCNUMB+1
 CMPIY USTPTR
 BNE #20
 INY
 LDA MCNUMB+2
 CMPIY USTPTR
 BNE #20
 LDYIM UTPRIV
 LDAIY USTPTR
 ANDIM INUSE
 BEQ #20

 LDAIM 0 ;RETURN CODE
 RTS

20 JSR INCUST ;USTPTR+:=UTENSZ,X-:=1
 BNE #10
 LDAIM URERRA ;RC:=MACHINE NOT LOGGED ON
 RTS


INITUS LDA USERTB ;USTPTR:=USERTB,X:=USERS
 STA USTPTR
 LDA USERTB+1
 STA USTPTR+1
 LDX USERS
 RTS


INCUST ROUT
 CLC  ;USTPTR+:=UTENSZ,X-:=1
 LDA USTPTR
 ADCIM UTENSZ
 STA USTPTR
 BCC #10
 INC USTPTR+1
10 DEX
 RTS


DRVINF LDYIM ARGB ;A := DRIVE NUMBER
 STAIY NEWARG
 DEY  ;Y := ARGA
 LDAIM 8 ;MAPMAN.DRIVEINFO
 STAIY NEWARG
 JMP MAPMAN


;Flushes store and ensures map for drive
;passed in A.

FLUDRV ROUT
 JSR DRVINF ;GET DISC NO.
 BNE #10 ;ABORT IF ERROR

 LDAIM 8
 JSR SETRTN
 JSR STRMAN ;*** FLUSH STORE **
 BNE #10

 LDAIM 6
 JSR SETRTN
 JSR MAPMAN ;*** ENSURE DISC **
10 RTS


;Flushes all drives in system, so it is
;safe to start from scratch !!

FLUSYS ROUT
 LDA DRIVES
10
 [ $Level3
 SEC
 SBCIM 1
 |
 DECA
 ]
 BMI #20
 PHA
 JSR FLUDRV
 BNE #30
15 PLA
 [ $Level3
 JMP #10
 |
 BRA #10
 ]

20 LDAIM 16
 JSR SETRTN
 JMP MAPMAN ;MAPMAN.FLUSYS to empty map caches
 
30 CMPIM MPERRF ;Bad drive no?
 BEQ #15 ;yes, ignore (inter-disc gap)
 JSR USRERR
 PLA
 RTS

 LNK Uade06
