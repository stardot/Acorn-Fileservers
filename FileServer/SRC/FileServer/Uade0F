
 OPT UADE0F ;> Uade0F
 TTL File server file UADE0F

;**********************
;*    A U T M A N     *
;**********************

;AUTMAN: THE AUTHENTICATION MANAGER
;THE PASSWORD FILE CONTAINS A NUMBER
;OF ENTRIES, EACH OF WHICH HAS THE FOLLOWING FORM:-
;0) USERID (10 BYTES)
;1) PASSWORD (6 BYTES)
;4) Free space (4 bytes)
;3) FLAG (1 BYTE) - INUSE & privileges FLAG

APWIND * 4 ;window size in blocks

;***** MAIN ROUTINE *****

AUTMAN ROUT
 LDXIM 10 ;AUTMAN HAS 10 ENTRY POINTS
 LDAIM MODAUT ;A:=NAME OF THIS MODULE
 JSR ENTRY
 [ $Level3
 LDAAX ATRTNS
 STA ATJUMP+1
 LDAAX ATRTNS+1
 STA ATJUMP+2
 LDAIM 0
 STA ATDRIV ;**23/1/87**  altered in ATNWUS
 ]
 
 LDAIM 9
 STA ATWORK ;**31/10/83** >0 -> dont keep window with empty slot
 [ $CMOS
 STZ ATDRIV ;**23/1/87**  both altered in ATNWUS
 ]
 JSR SETFS
 [ $Level3
ATJUMP JMP ATJUMP
 |
 JMIX ATRTNS
 ]
ATRTNS
 & ATNWUS ;1 => NEW USER
 & ATCKPW ;2 => CHECK PASSWORD
 & ATSTPW ;3 => SET PASSWORD
 & ATDLUS ;4 => DELETE USER
 & ATSPRV ;5 => SET PRIVILEGE
 & ATREST ;6 => RESTART
 & ATSOPT ;7 => SET "USER OPTION"
 & ATENS  ;8 => Update user disc space in PW file ** 2/10/84 **
 & ATFREE ;9 => Return user disc space
 & ATWRIT ;10=> Write user disc space
ATEXIT JMP PREXIT

PWTITL = "$.PASSWORDS",CR

;***** ATNWUS *****

;ATNWUS: NEW USER - MAKE AN ENTRY IN THE PASSWORD FILE

;ENTRY:
;ARGB-C PTR TO USERINFO
;ARGD-E PTR TO USERID

;EXIT:  ARGA = RC

;FUNCTION:-
;0) CHECK THAT CALLER HAS SYSTEM PRIV
;1) CHECK THAT USERID DOES NOT EXIST ALREADY
;2) CHECK SYNTAX OF USERID
;3) MAKE AN ENTRY IN PW FILE

ATNWUE ROUT ;Here to enlarge the file on retry
 STA ATWORK ;Nonzero flag
 JSR APENRG ;Enlarge the file
 BNE ATEXIT

ATNWUS ROUT
 [ $CMOS
 STZ DOTFLG
 |
 LDAIM 0
 STA DOTFLG
 ] 
 JSR CHKPRV ;CHECK THAT CALLER HAS SYSTEM PRIV
 BNE ATEXIT
 JSR SETAUT ;AUTPTR:=PTR TO USERID

;SEE IF USERID EXISTS ALREADY

 [ $CMOS
 STZ ATDRIV
 |
 LDAIM 0
 STA ATDRIV
 ] 
 JSR FDUSID
 BNE #05
 LDAIM ATERRF ;USERID ALREADY IN USE
 [ $CMOS
 BRA #27
 |
 BNE #27
 ]
 
;Find free slot in p/w file

 [ $CMOS
05 STZ ATWORK ;Find free slot
 STZ ATDRIV ;**23/1/87** First drive to scan in default
 |
05 LDAIM 0
 STA ATWORK ;Find free slot
 STA ATDRIV ;**23/1/87** First drive to scan in default
 ] 
 JSR ATOPWF ;**22/5/88** Scan drives to open pw file
 BEQ #10
 CMPIM ATERRB ;Not found?
 BEQ ATNWUE ;Go enlarge file
 [ $CMOS
 BRA ATEXIT ;Exit on other error 
 |
 BNE ATEXIT ;Exit on other error 
 ] 

;Check syntax of userid

10 LDYIM 0
 STY DOTFLG
20 LDXIM MAXID
 LDAIY AUTPTR ;Check first char is alpha only
 JSR ISCHAR
 BCS #25 ;Nope -> error

22 LDAIY AUTPTR
 JSR ISDCHA ;Is digit or char
 BCS #24 ;Nope
 INY
 DEX
 BNE #22

 LDAIY AUTPTR ;Check char after user id. is terminator
24 CMPIM CR
 BEQ #30 ; => continue

 CMPIM DOT
 BNE #25

 LDA DOTFLG
 BNE #25
 INC DOTFLG

 CPYIM MAXID+1 ;should have had a "." before this
 BCS #25
 INY
 BCC #20

25 LDAIM ATERRG ;SYNTAX ERROR IN USERID
27 JMP #65

;SEE IF THERE IS ANY ROOM IN PW FILE

30 TYA ;Check if ptr. zero
 BEQ #25 ; => bad user id.
 EORIM MAXUNM
 STA DOTFLG ;0=> maximum length

 LDYIM PWUSID
35 LDAIY AUTPTR ;Set userid (terminated CR)
 CMPIM DOT
 BNE #40

 LDX DOTFLG
 BNE #40

 LDA PWFPTR
 BNE #37
 DEC PWFPTR+1
37 DEC PWFPTR
 [ $CMOS
 BRA #45
 |
 JMP #45
 ]

40 STAIY PWFPTR
 CMPIM CR
 BEQ #50 ;Check for end of userid
45 INY
 BNE #35

50 LDA DOTFLG
 BNE #55

 INC PWFPTR
 BNE #55
 INC PWFPTR+1

55 LDYIM PWPASS
 LDAIM TERMIN
 STAIY PWFPTR ;PASSWORD = ""

 LDYIM PWFREE ;space allocation always maximum
 LDAIM 4
 LDXIM UTFRLN-1
60 STAIY PWFPTR ;** 2/10/84 **
 INY
 DEX
 BNE #60
 TXA
 STAIY PWFPTR

 LDYIM PWFLAG
 LDAIM INUSE
 STAIY PWFPTR
 JSR MARKDT ;MARK PW FILE DIRTY
 LDAIM 0 ; success return code
65 JSR APENFL ;**25/12/86** flush from cache
 JMP ATEXIT

; ATOPWF finds a suitable password file, on disc with
; user's CSD if available, else on lowest numbered drive
; Exit A=0 if OK else error code
                                                        
ATOPWF ROUT ;**22/5/88**
 JSR CHKPRV ;**23/1/87** To get GENPTR:=Userinfo
 BNE #10
 LDYIM UTDISC
 LDAIY GENPTR
 TAX
 INY
 LDAIY GENPTR
 LDYIM ARGC
 STAIY NEWARG ;Selected disc number to stack
 TXA
 DEY
 STAIY NEWARG
 LDAIM 15
 JSR SETRTN
 JSR MAPMAN ;MAPMAN.MPDRNB
 BNE #07 ;use default if error
 LDYIM ARGB
 LDAIY NEWARG ;Else get selected drive number
 STA ATDRIV
07 JSR FDUSID
10 RTS

;***** ATCKPW *****

;ATCKPW: CHECK PASSWORD

;ENTRY:
;ARGB-C SPARE
;ARGD-E PTR TO USERID FOLLOWED BY PW

;EXIT:  ARGA = RC
;ARGB-E LS User disc space **2/10/84**
;ARGF = FLAG BYTE FROM PW FILE
;ARGG = Drive number of PW file **25/12/86**

ATCKPW ROUT
 JSR SETAUT ;AUTPTR:=PTR TO USERID
 JSR FDUSID ;SEARCH PW FILE FOR USERID
 BNE #30

 JSR ATFIND ;is user already logged on
 BCC #10 ;yes

 LDAIM PWFREE
 LDXIM PWFPTR
 [ $CMOS
 BRA #20 
 |
 BNE #20 
 ]
 
10 JSR ATFPTR ;make pointer
 LDAIM UTFREE
 LDXIM GENPTR

20 STA OFF1
 LDYIM ARGPTR
 LDAIM ARGB
 STA OFF2
 LDAIM 4
 JSR MOVBLK ;general move routine

 LDYIM PWFLAG
 LDAIY PWFPTR
 LDYIM ARGF
 STAIY ARGPTR
 INY
 LDA ATDRIV
 STAIY ARGPTR ;**25/12/86** Set PW file drive

;NOW SEE IF PASSWORDS MATCH

 JSR CHEKPW
 JSR APENFL ;remove the referenced block
30 JMP ATEXIT

;***** ATSTWP *****

;ATSTPW: SET PASSWORD

;ENTRY:
;ARGB-C PTR TO USERINFO
;ARGD-E PTR TO OLD PW FOLLOWED BY NEW PW

;EXIT:  ARGA = RC

;FUNCTION:- IF OLD PW MATCHES
;EXISTING PW IN PW FILE THEN CHANGE PW.

ATSTPW ROUT
 JSR SETAP1 ;Set AUTPTR to point to user id.
 JSR FDUSID ;SEARCH PW FILE FOR USERID
 BNE #50

;NOW SEE IF OLD PW MATCHES THAT IN PW FILE

 LDYIM ARGD
 LDAIY ARGPTR
 STA AUTPTR
 INY
 LDAIY ARGPTR
 STA AUTPTR+1 ;AUTPTR USED BY CHEKPW
 LDYIM 0 ;Offset for first pw
 JSR CHEKP1
 BNE #40

;CHECK SYNTAX OF NEW PW

 JSR STEPUR ;Step Y past first PW
 STY OFF1 ;OFFSET FOR START OF NEW PW
 LDXIM MAXPW
10 LDAIY AUTPTR
 CMPIM TERMIN
 BEQ #30
 JSR ISDCHA ;Is digit or character ?
 BCS #20 ;Nope => error

 INY
 DEX
 BNE #10
 LDAIY AUTPTR
 CMPIM TERMIN
 BEQ #30 ;SYNTAX OF PW OK
20 LDAIM ATERRE
 [ $CMOS
 BRA #40
 |
 BNE #40
 ]
 
;NOW COPY NEW PW INTO PW FILE

30 LDAIM PWPASS ;Copy new PW into PW file
 STA OFF2 ;Note OFF1 already set
 LDXIM AUTPTR ;"From" ptr.
 LDYIM PWFPTR ;"To" ptr.
 LDAIM MAXPW
 JSR MOVBLK

 JSR MARKDT ;MARK PW FILE STORE BUFFER DIRTY
 LDAIM 0
40 JSR APENFL ;clear out the referenced block
50 JMP ATEXIT

;***** ATDLUS *****

;ATDLUS: DELETE USER FROM PASSWORD FILE

;ENTRY:
;ARGB-C PTR TO USERINFO
;ARGD-E PTR TO USERID

;EXIT:  ARGA = RC

ATDLUS ROUT
 JSR ATOPWF ;**22/3/88** open suitable password file
 BNE #30 ;**22/3/88** br if error (including unprivileged)

;NOW CLEAR PASSWORD FILE ENTRY

 LDXIM PWENSZ
 LDYIM 0
 TYA
10 STAIY PWFPTR
 INY
 DEX
 BNE #10
 JSR MARKDT ;MARK PW FILE BUFFER DIRTY
 LDAIM 0
 JSR APENFL ;Flush PW FILE

30 JMP ATEXIT

;***** ATSPRV *****

;ATSPRV: SET PRIVILEGE OF A SPECIFIED USER

;ENTRY:
;ARGB-C PTR TO USERINFO
;ARGD-E PTR TO USERID
;ARGF = PRIV. FLAG (0 => user, 1 => syst priv, 2 => low priv)

;EXIT:  ARGA = RC

ATSPRT = 0, SYSTPV, LOPRIV, 0 ; table for priv bits *** 25/5/86 ***

ATSPRV 
 JSR ATOPWF ;**22/3/88** open suitable password file
 BNE #30 ;**22/3/88** br if error (including unprivileged)

 LDYIM ARGF
 LDAIY ARGPTR ;Load priv. flag
 ANDIM 3 ;**25/5/86** mask low value bits
 TAY ;**25/5/86** for indexing
 LDAAY ATSPRT ;**25/5/86** get priv bit setting
 STA ATWORK ;Mask to be OR'd in to PW file
 LDYIM PWFLAG
 LDAIY PWFPTR
 ANDIM NTSYST-LOPRIV ;**25/5/86** Mask off priv bits
 [ $CMOS
 BRA ATENPW ;OR in ATWORK, ensure PW file
 |
 JMP ATENPW ;OR in ATWORK, ensure PW file
 ]
 
;***** ATREST *****

;ATREST: AUTMAN.RESTART
;FINDOUT THE DISC NUMBER OF THE DISC
;WHICH CONTAINS THE PASSWORD FILE.
;NOTE IF PW FILE NOT FOUND A <>0 RC IS RETURNED

;EXIT:  ARGA = RC

ATREST ROUT
 LDAIM :LSB:ATUSRI
 STA ATUSPT
 LDAIM :MSB:ATUSRI
 STA ATUSPT+1 ;ATUSPT := PTR TO AUTMAN'S USERINFO AREA

 LDAIM ATERRA ;**25/12/86** Assume the worst
 STA ATWORK

 LDYIM UTPRIV
 LDAIM SYSTPV+INUSE
 STAIY ATUSPT ;AUTMAN HAS SYSTEM PRIV
 [ $CMOS
 STZ ATDRIV ;DRIVE NUMBER
 |
 LDAIM 0
 STA ATDRIV ;DRIVE NUMBER
 ] 
10 LDA ATDRIV ;A:=DRIVE NUMBER
 JSR DRVINF ;MAPMAN.DRIVEINFO
 BNE #30 ;**14/06/86**

 JSR RETPWF ;RETRIEVE PW FILE
 BEQ #20
 CMPIM DRERRC ;IF RC=CANNOT FIND OBJECT THEN TRY NEXT DRIVE
 BEQ #30
 JSR INTERR
 [ $CMOS
20 STZ ATWORK ;**25/12/86** PW file found
 |
20 LDAIM 0
 STA ATWORK ;**25/12/86** PW file found
 ] 
30 INC ATDRIV ;ATDRIV+:= 1
 LDA ATDRIV ;**14/06/86**
 CMP DRIVES ;**14/06/86**
 BCC #10 ;**14/06/86** Continue until all checked
 LDA ATWORK ;**25/12/86** RC reflects presence of password file
 JMP ATEXIT


;***** ATSOPT *****

;Set user option bits in PW flag (bottom two bits)

;ENTRY: ARGB/C = ptr. to user info (lo/hi)
;       ARGD   = new option bits (bottom two bits)

;EXIT : ARGA   = RC

ATSOPT ROUT
 JSR SETAP1 ;Set AUTPTR -> user id.
 JSR FDUSID ;Find user id. in pw file
 BNE #20
 LDYIM ARGD
 LDAIY ARGPTR
 ANDIM OPTMSK ;Mask off option bits
 STA ATWORK
 LDYIM PWFLAG
 LDAIY PWFPTR ;Read PW flag byte
 ANDIM NTOPT ;Mask off all but option bits

ATENPW

;Exit code shared by ATSPRV

 ORA ATWORK ;OR in option bits
 CMPIY PWFPTR ;**25/12/86** Has option changed?
 BEQ #10 ;**25/12/86** skip marking dirty if not
 STAIY PWFPTR
 JSR MARKDT ;Mark PW file dirty
10 LDAIM 0 ;Return code (restored over ENSPWF)
 JSR APENFL ;Ensure PW file
20 JMP ATEXIT

;***** ATENS *****

;ensure that user disc allocation is up to date
;on disc.

;ENTRY ARGB,C unset
;      ARGD,E pointer to user id
;      ARGF,G,H,I value to write

ATENS ROUT
 JSR SETAUT ;point to userid
 JSR FDUSID ;lookup the name
 BNE #60

10 LDAIM ARGF
 STA OFF1
 LDAIM PWFREE
 STA OFF2
 LDXIM ARGPTR
 LDYIM PWFPTR
 LDAIM 0 ;**25/12/86** prepare move routine
 JSR MOVBLK
 LDXIM UTFRLN
 JSR COMPAR ;**25/12/86** has field changed?
 BEQ #20 ;**25/12/86** no, do not mark dirty
 LDXIM UTFRLN ;**25/12/86** yes, copy field
 JSR MOVE ;**25/12/86** pointers are preset
 JSR MARKDT
20 JSR APENLV ;unlock PW file
 LDAIM 0
 [ $CMOS
 BRA #60
 |
 BEQ #60
 ]
 
;***** ATFREE *****

;ENTRY ARGB,C ptr to callers info
;      ARGD,E ptr to user name

;EXIT  ARGB,C,D,E user free space

ATFREE JSR ATFIND ;is user logged on
 BNE #60 ;some error here
 BCC #30 ;user logged on

 JSR SETAUT
 JSR FDUSID
 BNE #60 ;not found

 LDAIM PWFREE
 STA OFF1
 LDXIM PWFPTR
 SEC
 [ $CMOS
 BRA #40
 |
 BCS #40
 ]

30 JSR ATFPTR ;grasp pointer from stack
 LDAIM UTFREE
 STA OFF1
 LDXIM GENPTR
 CLC

40 LDAIM ARGB
 STA OFF2
 LDYIM ARGPTR

 PHP
 LDAIM 4
 JSR MOVBLK ;copy the info to the appropriate place
 PLP
 LDAIM 0
 BCC #60
50 JSR APENFL

60 JMP ATEXIT ;and return to caller

 LNK UADE0FA
