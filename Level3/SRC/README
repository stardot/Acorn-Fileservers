Level 3 File Server v0.90 Pre-Release IV.05
===========================================

This disc contains a recreation of the source code for the Acorn Level 3 
File Server. It has been achieved by using the original binary and the 
source code from v1.06.

Assembling the File Server Source Code
======================================

The source code will assemble on either a BBC with an Acorn Turbo (256K) 
6502 Co-Processor and ADFS or on Arthur/RISC OS using the 6502 Turbo 
Co-Processor emulator which is included here.
To assemble on a BBC, use SHIFT-BREAK or *EXEC !BOOT. On RISC OS, double 
clicking the file GO will start the process. The assembled file "FS" will be
placed in the root directory. The assembly process is significantly faster 
when a hard drive is used instead of a floppy.

Files
=====

\ $
  !BOOT     - BBC Routine to set library and call L3ASM
  GO        - RISC OS Routine to set library, load emulator and call L3ASM
  README    - This file
  L3ASM     - Loads TurboMasm and starts the assembly process
  LOADER    - BASIC program to put together the assembled parts and create the 
              Level3 binary "FS"

\ LIBRARY
  65ARTHURT - The Turbo Co-processor emulator for RISC OS
  CB        - BASIC for the Turbo Co-processor
  TURMASM   - Turbo version of MASM assembler
  
\ L3  
  The source code files  

\ L3\X
  Location for the assembled parts. Do not delete or the assembler will fail.


Version 0.90 Pre-Release IV.05
==============================

Date - estimated. May-Oct 1985 (possibly 4 May from the pre-release version). 
       Two comments are dated after that date but with code included in the 
       binary. The comments could have been added at a later date to already
       existing code or versions were kept the same but the code was different.
       That would date the code to Oct 1985. There are changes labelled 
       15/12/85 that are not in this binary. The assembler directive file FSASM
       has the comment updated by Glenn 8/5/85.
       
Comments
========
There are two Trace debug pieces of code in the final binary although the 
DEBUG directive is set to 0 (file Uade14) and the binary performs a simple RTS
when it is called.

There is also a version of the same code with the banner displaying BARSON
COMPUTERS. Barson were one of Acorn's distributors in Australia and it looks
like the branding was probably done by hex editing the binary directly rather 
than altering the code.
