 OPT UADE04 ; FILE > Uade04
 TTL File server file UADE04


;*********************************
;*   FILE SERVER INITIALISATION  *
;*********************************


INIT ROUT
 LDAIM 7
 JSR SETRTN
 JSR MAPMAN ;MAPMAN.RESTART
 BNE #10

 LDAIM 4
 JSR SETRTN
 JSR USRMAN ;USRMAN.RESTART
 BNE #10

 LDAIM 4
 JSR SETRTN
 JSR RNDMAN ;RNDMAN.RESTART
 BNE #10

 LDAIM 6
 JSR SETRTN
 JSR STRMAN ;STRMAN.RESTART
 BNE #10

 LDAIM 6 ;Restart AUTMAN
 JSR SETRTN
 JSR AUTMAN ;AUTMAN.RESTART
 BEQ #20
10 PHA

  JSR INTERR
;v1.31
; JSR USRERR

 PLA
20 RTS


;Main start point
;Resets ENDPTR, FREPTR and re-allocates all tables.
;STRTF1 Entry with door state in A

;v1.31
;CMintb ;**5/3/88** table for initialising CMOS RAM
; = &FE,&01 ;Set station id + complement
; = 0,0,0,0 ;Reserved
; = 0,0,0,0,0 ;Error logout
; = 0,0,0 ;SIN of last disc access on error
; = 80 ;Max users
; = 6 ;Max drives
; = "PRINT " ;printer name
; = "SYST",CR ;maintenance userid
; = 0,0,0,0,0,0 ;...continued
; = :LSB:("S"+"Y"+"S"+"T"+&0D)+:MSB:("S"+"Y"+"S"+"T"+&0D)
; = 0 ;printer page flag
; = 0 ;ACORN copyright check flag

Strtfs ROUT
 LDXIM 1 ;Turn on LED during tests
 LDAIM 137
 JSR OSbyte
 JSR MEMTST ;Test memory - comes back only if OK
 
;v1.31
; LDXIM Stnids ;**5/3/88** find if CMOS initialised
; JSR OSrdad
; STA Cozero
; LDXIM Stnids+1
; JSR OSrdad
; SEC
; ADC Cozero ;if station ids checksum
; BEQ #20 ;then assume initialised
; LDXIM CMinst
;10 LDAAX CMintb-Stnids
; PHX
; JSR OSwrad
; PLX
; INX
; CPXIM CMinen
; BCC #10

;20 
 
 JSR Pstart ;Now start the printserver

 LDAIM 128 ;read user switches
 LDXIM 0
 JSR OSbyte
Strtf1 ROUT
 STA Cozero+11 ;save door state in zero page
 LDAIM Mask ;Protect against ECOnet interference
 JSR Doprot

 LDXIM MUaddr ;Read number of users
 JSR OSrdad ;From non-volatile memory
 BEQ #00 ;Use max if unset
 CMPIM Maxuse ;or if too big
 BCC #01
00 LDAIM Maxuse ;Set number of users to max
01 STA Users

 LDXIM MDaddr ;Read number of drives
 JSR OSrdad ;From non-volatile memory
 BEQ #02 ;Use default if unset
 CMPIM 7 ;or if too big
 BCC #03
02 LDAIM 6 ;Set drives to Winnie + 2 floppies
03 STA Drives

 STZ Cmndsw ;Default to user mode
 LDXIM 0 ;determine mode & led setting 
 LDA COZERO+11 ;reload entry door state
 ANDIM 2 ;isolate door switch
 BEQ #05 ;br if in user state (door closed)
 LDAIM &80 ;else set command mode 0
 STA Cmndsw ;set in command mode
 INX
05 LDAIM 137
 JSR OSbyte ;set led to command/user state
 
 JSR Getdte ;Get date & time from RTC chip

Strtf2 ;Enter here after FSMODE M
10 LDAIM :LSB:DYNSTA
 STA FREPTR
 STA Bigbuf ;Used in command mode only
 LDAIM :MSB:DYNSTA
 STA FREPTR+1 ;FREPTR := DYNSTA
 STA Bigbuf+1

 LDA MEMEND
 STA ENDPTR
 LDA MEMEND+1
 STA ENDPTR+1

;GET SOME SPACE FOR THE ARGUMENT STACK AND SETUP ARGPTR

 LDYIM :LSB:STKSZE
 LDXIM :MSB:STKSZE
 JSR GETVEC
 STY ARGPTR
 STX ARGPTR+1

;NOW CLEAR THE ARGUMENT STACK TO ZERO

 STY CLRPTR
 STX CLRPTR+1 ;CLRPTR:=ADDR OF ARGUMENT STACK
 LDYIM :LSB:STKSZE
 LDXIM :MSB:STKSZE
 JSR CLRSTR

;Perform remaining initialisation

 LDAIM 1
 JSR SETFS
 BIT Cmndsw ;only call INIT in User mode
 BMI #20
 JSR INIT
 BNE #10

20 JSR Getbb ;get big buffer
 JMP CMND ;JUMP TO FILE SERVER COMMAND PROCESSOR

; DOPROT:
; set ECOnet protection state from mask in A.
; All regs destroyed.

Doprot ROUT
 STA OSwork+1 ;Save required mask
 LDAIM 5
 STA OSwork ;Set protection call
 LDXIM :LSB:OSwork
 LDYIM :MSB:OSwork
 LDAIM &13
 JMP OSword ;Set mask and return

; GETDTE/SETDTE:
; Get or set the date vector from the MOS - slightly fudged interface
; includes the date and time.  Must let the MOS manipulate the date chip
; due to interrupt constraints etc.

; OSword entry: X/Y = address of 5 byte date/time vector.  Order is:
; Day of month
; Year offset/month
; Hours
; Minutes
; Seconds

Getdte ROUT
 LDAIM 1
 BRA #10

Setdte LDAIM 2
10 LDXIM :LSB:Date
 LDYIM :MSB:Date
 JMP OSword ; OSword 1 or 2 as appropriate


; Check the date for sensible values and report if silly
       
MW30D = 4,6,9,11

CHKDTE ROUT
 LDA DATE

;v1.31
; ANDIM 31 ;**24/2/88** isolate day of month
; TAX

 BEQ #40
 CMPIM 32
 BCS #40
 LDA DATE+1
 ANDIM &F
 BEQ #40
 CMPIM 13
 BCS #40
 CMPIM 2
 BEQ #20 ; br to check leap year

;v1.23
 LDA DATE
 
;v1.31
; TXA

 CMPIM 31
 BCC #30
 LDXIM 4
 LDA DATE+1
 ANDIM &F
10 CMPAX MW30D-1
 BEQ #40
 DEX
 BNE #10
 BRA #30

;v1.23
20 LDA DATE

;v1.31
;20 TXA

 CMPIM 29
 BCC #30
 CMPIM 30
 BCS #40

;v1.23
 LDA DATE+1
 LSRA
 LSRA
 LSRA
 LSRA
 ADCIM 81
 ANDIM 3

;v1.31
; LDA DATE+1
; ADCIM :LSB:(BASEYR*16)
; ANDIM 3*16
 BNE #40
30 LDAIM 0
 RTS

40 LDAIM 1
 RTS

 LNK UADE05
